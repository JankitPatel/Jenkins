pipeline {
    agent any

    environment {
        DIRECTORY_PATH = '/path/to/code'
        TESTING_ENVIRONMENT = 'Staging'
        PRODUCTION_ENVIRONMENT = 'Jankit_Production'
    }

    stages {
        stage('Build') {
            steps {
                echo "Compiling the code and packaging it into a JAR..."
                echo "Command: mvn compile jar:jar"
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                echo "Executing unit tests with Maven Surefire Plugin..."
                echo "Command: mvn surefire:test"

                echo "Executing integration tests separately..."
                echo "Command: mvn failsafe:integration-test failsafe:verify"
            }
        }

        stage('Code Analysis') {
            steps {
                echo "Running static code analysis using SonarQube Scanner..."
                echo "Command: mvn sonar:sonar -Dsonar.login=mytoken"
            }
        }

        stage('Security Scan') {
            steps {
                echo "Initiating OWASP Dependency-Check for security vulnerabilities..."
                echo "Command: mvn dependency-check:aggregate"
            }
        }

        stage('Deploy to Staging') {
            steps {
                echo "Transferring application to the staging environment via AWS CLI..."
                echo "Command: aws s3 sync target/ s3://your-staging-bucket/path/to/deploy/"
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                echo "Conducting integration tests in the staging environment..."
                echo "Command: mvn verify -Denv=staging"
            }
        }

        stage('Deploy to Production') {
            steps {
                echo "Uploading the application to the production environment using AWS CLI..."
                echo "Command: aws s3 sync target/ s3://your-production-bucket/path/to/deploy/"
            }
        }
    }

    post {
        success {
            emailext(
                subject: "SUCCESS: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                body: """
                Good news! The build ${env.JOB_NAME} [${env.BUILD_NUMBER}] was successful.
                You can view it at: ${env.BUILD_URL}
                """,
                to: 'jankitpatel11@gmail.com',
                attachLog: true
            )
        }
        failure {
            emailext(
                subject: "FAILURE: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                body: """
                Unfortunately, the build ${env.JOB_NAME} [${env.BUILD_NUMBER}] failed.
                Please check the Jenkins logs at: ${env.BUILD_URL}
                """,
                to: 'jankitpatel11@gmail.com',
                attachLog: true
            )
        }
        always {
            echo 'This will always run after all the stages have completed.'
        }
    }
}
